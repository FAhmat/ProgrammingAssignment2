list.files(my_div, my_sqrt, "x", "y", "z")
list.files()
dir()
?list.files
args(list.files)
old_dir<-ls()
old_dir<-getwd()
old.dir <- getwd()
testdir <- dir.create(old.dir)
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R"")
file.create("mytest.R")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename(("mytest.R", "mytest2.R")
file.rename(("mytest.R", "mytest2.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path(folder1, folder2)
play()
?file.path
file.path("folder1", "folder2")
nxt()
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2", "testdir3", recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
unlink(testdir, recursive = TRUE)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
se(1,20)
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5, 10, length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect<-c(0.5, 55, -10)
num_vect<-c(0.5, 55, -10, 6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name<-c(my_char, "Filza")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep = "")
LETTERS
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z<-rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect<-c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length((my_vector))
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes((my_vector))
attributes((my_vector)
attributes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20, nrow=4,ncol=5)
identical(my_matrix, my_matrix2)
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 ==7
6<7
10<=10
5!=7
5 != 7
!(5==7)
FALSE&FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE ¦ c(TRUE, FALSE, FALSE)
TRUE  c(TRUE, FALSE, FALSE)
TRUE ¦ c(TRUE, FALSE, FALSE)
TRUE ¦ c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical("twins", "twins")
xor(5==6, !FALSE)
ints<-sample(10)
ints
ints > 5
which(ints > 7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
function(x)
x(x)
script <- x(x)
x(x)
submit()
boring_function(x)
submit(boring_function())
submit()
submit()
submit()
info()
boring_function()
boring_function(x)
skip()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
submit()
skip()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){[1]}, c(8,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
skip()
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Let", "there", "be", "light.")
submit()
submit()
skip()
mad_libs("Ogdenville", "laidback", "folly")
submit()
'I'%p%'love'%p%'R'
'I' %p% 'love' %p% 'R'
skip()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[11:17]
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
range(flag_shapes)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(C(3,4,5,5,5,6,6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
play()
summary(flags)
nxt()
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head()
head(plants, 10)
tail(plants, 15)
summary((plants))
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips[1])
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips <- rbinom(c(0,1), size = 100, prob = 0.7)
flips2 <- rbinom(n=100, size = 1, pron)
flips2 <- rbinom(n=100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, mean = 10)
rpois(5)
rpois(5, lambda = 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- sapply(my_pois, colMeans)
cm <- lapply(my_pois, colMeans)
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
tl <- Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time(t1))
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B, %d, %Y, %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data("cars")
data(cars)
?help
?cars
head(cars)
plot(cars)
?plot()
?plot
plot(x = cars$speed, y = cars$dist)
plot(cars$dist, cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
mtcars
data(mtcars)
?boxplot
boxplot(mpg~cyl, mtcars)
hist(mtcars$mpg)
quit()
mean(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
?mean
sum(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
sum/7
54.56/7
vec <- c(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
mean(vec)
lapply((1:25)**, sum)
lapply((1:25)^2, sum)
?lapply
i_sqr <- (c(1:25))^2
i_sqr
sum(i_sqr)
sum(c(1:25)^2)
c(1:25^2)
c((1:25)^2)
version
data(cars)
class(cars)
names(cars, ncol = 2)
names(cars)
cars
mean(cars[,2])
?which
which(dist == 85)
cars(which(dist == 85))
which(cars, dist == 85)
which(cars, "dist" == 85)
which(cars, 85)
which(cars, "dist" == 85)
which(cars$dist == 85)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source()
source(untitled1)
source("Untitled1")
swirl()
library("swirl")
ls()
rm(list = ls())
swirl()
0
Sys.Date()
mean(c(2,4,5))
submit()
info()
main()
bye()
swirl()
boring_function('My first function!')
skip()
submit()
my_mean(c(4,5,10))
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
akip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
submit()
submit()
submit(Week 1 loop)
sum(c(1:25)^2)
source('~/Continuing Education/edX/Statistics and R/w1Loop.R')
isq
sum(isq)
isq
isq
source('~/Continuing Education/edX/Statistics and R/trial.R')
source('~/Continuing Education/edX/Statistics and R/w1loop.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
isq
class(isq)
str(isq)
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
str(isql)
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
?sum
sum(isqv)
sum(isq)
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
source('~/Continuing Education/edX/Statistics and R/w1loop2.R')
sum(isq)
getwd()
library(devtools)
setwd()
?setwd
setwd(dir)
setwd(C:\Users\filza_000\Documents\Continuing Education\edX\Statistics and R)
setwd("C:\Users\filza_000\Documents\Continuing Education\edX\Statistics and R")
getwd()
setwd("C:\\Users\filza_000\Documents\Continuing Education\edX\Statistics and R")
setwd("C:\\Users\filza_000\\Documents\\Continuing Education\edX\\Statistics and R")
setwd("C:\\Users\filza_000\\Documents\\Continuing Education\\edX\\Statistics and R")
x<-1:10
source('~/.active-rstudio-document')
y<-x^2
plot(x,y)
install.packages("dplyr")
library(dplyr)
dat <- read.csv("femaleMiceWEights.csv")
dat <- read.csv("femaleMiceWeights.csv")
dat
dat <- read.csv("femaleMiceWeights.csv")
dat <- read.csv("femaleMiceWeights.csv")
femaleMiceWeights <- read.csv("~/Continuing Education/edX/Statistics and R/StatsandR/femaleMiceWeights.csv")
View(femaleMiceWeights)
dat <- read.csv("femaleMiceWeights.csv")
dat <- read.csv("femaleMiceWeights")
install.packages(swirl)
install.packages('swirl')
library(swirl)
swirl()
source('C:/Users/Filza/Google Drive/w3makeCacheMatrix.R')
x <- makeCacheMatrix()
x$set(matrix(1:100,2))
x$get()
x$set(matrix(1:100,10))
x$get()
x$setmatrix()
x$set(matrix(1:4,2))
x$get()
x$setmatrix()
x$getmatrix()
source('C:/Users/Filza/Desktop/w3makeCacheMatrix.R')
x$setmatrix()
x$set(matrix(1:4,2))
x$setmatrix()
x$getmatrix()
x$set(matrix(1:100,10))
x$get()
x$setmatrix()
setwd("~/GitHub/ProgrammingAssignment2")
